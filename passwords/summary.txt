Names: Luisa Escosteguy, PJ Sangvong

Part 1
Total time: 
    real    0m0.799s
    user    0m0.683s
    sys     0m0.054s
Number of hashes computed: All of them, 267751
Passwords cracked: 2805
Time per hash computed: [seconds per hash]
Time per password cracked: [seconds per password]
Passwords cracked per number of hashes computed: [passwords per hash]

Part 2
Total time: [user time from a "time" command]
Number of hashes computed: [count of the # of hashes computed] 
Passwords cracked: [number cracked]
Time per hash computed: [seconds per hash]
Time per password cracked: [seconds per password]
Passwords cracked per number of hashes computed: [passwords per hash]

Part 3
Total time: [user time from a "time" command]
Number of hashes computed: [count of the # of hashes computed] 
Passwords cracked: [number cracked]
Time per hash computed: [seconds per hash]
Time per password cracked: [seconds per password]
Passwords cracked per number of hashes computed: [passwords per hash]

Analysis:
- Did your time per hash computed change between phases? By what factor? Why?
- Did your time per password crack change between phases? By what factor? Why?
[number and explanation]
- Suppose you wanted to precompute all the possible password hashes for each
so you could just look up the password in a table indexed by the hash. How much
memory would be required for each phase?
- Give 3-4 reasons we should store password hashes and not the passwords themselves.
Think in terms of threats, who the attackers might be, etc.
